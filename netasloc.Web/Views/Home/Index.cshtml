@{
    ViewData["Title"] = "Home Page";
}
@model IndexViewModel

<div class="table-container table-responsive" id="releases-table-container">
    <table class="table table-inverse table-bordered table-hover thead-dark table-sm">
        <tbody>
            <tr>
                <th>Release Code</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.ReleaseCode</td>
                }
            </tr>
            <tr>
                <th>LOC</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.TotalLineCount</td>
                }
            </tr>
            <tr>
                <th>Comment</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.CommentLineCount</td>
                }
            </tr>
            <tr>
                <th>Empty</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.EmptyLineCount</td>
                }
            </tr>
            <tr>
                <th>SLOC</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.CodeLineCount</td>
                }
            </tr>
            <tr>
                <th>LOC Difference</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.DifferenceLOC</td>
                }
            </tr>
            <tr>
                <th>SLOC Difference</th>
                @foreach (var item in Model.Releases)
                {
                    <td>@item.DifferenceSLOC</td>
                }
            </tr>
        </tbody>
    </table>
</div>

<div class="chart-container" style="position: relative; height:30vh; width:80vw">
    <canvas id="LastAnalyzedDirectories"></canvas>
</div>

<script src="~/lib/Chart.js/Chart.js"></script>
<script>
    function drawLastAnalyzedDirectoriesGraph(projectNames, fileCounts, totalLines, totalCodeLines, totalCommentLines, totalEmptyLines, date) {
        var ctx = document.getElementById('LastAnalyzedDirectories').getContext('2d');

        var backgroundColorList = [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
        ];

        var borderColorList = [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
        ];

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: projectNames,
                datasets: [{
                    label: 'File Count',
                    data: fileCounts,
                    backgroundColor: backgroundColorList,
                    borderColor: borderColorList,
                    borderWidth: 1
                },
                {
                    label: 'Lines Of Code',
                    data: totalLines,
                    backgroundColor: backgroundColorList,
                    borderColor: borderColorList,
                    borderWidth: 1
                },
                {
                    label: 'Source\'s Lines Of Code',
                    data: totalCodeLines,
                    backgroundColor: backgroundColorList,
                    borderColor: borderColorList,
                    borderWidth: 1
                },
                {
                    label: 'Comment Line Count',
                    data: totalCommentLines,
                    backgroundColor: backgroundColorList,
                    borderColor: borderColorList,
                    borderWidth: 1
                },
                {
                    label: 'Empty Line Count',
                    data: totalEmptyLines,
                    backgroundColor: backgroundColorList,
                    borderColor: borderColorList,
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: "Current status of tracked projects, last analyzed at " + date
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }

    drawLastAnalyzedDirectoriesGraph(
        @Html.Raw(Model.Directories.projectNames),
        @Html.Raw(Model.Directories.fileCounts),
        @Html.Raw(Model.Directories.totalLines),
        @Html.Raw(Model.Directories.totalCodeLines),
        @Html.Raw(Model.Directories.totalCommentLines),
        @Html.Raw(Model.Directories.totalEmptyLines),
        @Html.Raw(Model.Directories.date)
    );
</script>
